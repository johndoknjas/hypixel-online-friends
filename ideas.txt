# CONTINUE HERE - todos:

    # Add an intersection operation for the arguments, that says to get players who are friends of both
    # players specified. So now three operators: union, intersection, difference.
        # keep no operator between two players as meaning union (can also add 'v' that the user can
        use to optionally specify if they want though).
        # '-' still means difference
        # ^ can mean intersection.
        # To allow the existing format of arguments to work, union will have higher precedence than difference.
            # e.g., p1 p2 - p3 p4 should still mean the union of p1 and p2's friends minus the 
              union of p3 and p4's friends.
        # Allow the user to add parentheses if they want to specify some specific precedence.
            # E.g., p1 (p2 - p3 p4) would evaluate p2 to p4 stuff first and then union that with p1's friends.

    # Add a feature to just get friends over a certain fkdr.
        # When this is implemented you could then run the program and save this list a file, and then 
        # just go through this file when looking for people to party online.

    # Add a feature where if 'avg' is a command line argument, the average size will be calculated for
    # all friends lists the program comes across. Could also make a 'total' arg, that displays the total
    # number of (unique) friends in all f lists processed.

    # Add a feature that aims to backup the friends lists of most of the (active part?) of the hypixel server.
        # A good way to do this is use the hypixel api to get players on the daily bedwars leaderboard.
        # This will update every day, and the people on the leaderboard are obviously active players who
        # probably are friends with other active players.

        # So could go through each daily leaderboard, pick the top 10, get their 10 most recently added friends,
        # get their 10 most recently added friends, etc until something like 1000-10,000. You can backup these
        # many friends lists then.
            # Important that before continuing down this "tree" at a given player, you check that their
            # f list is not already backed up in the results folder.
                # When doing this, can also record how many of these players already have their f lists
                # recorded in the results folder. This
                # can give you an idea as time goes on of approx. what percentage of f lists of active bw
                # players you've backed up.
                    # At the time of writing this percentage should be pretty low though, since it's under 10,000
                    # players' f lists recorded in results.